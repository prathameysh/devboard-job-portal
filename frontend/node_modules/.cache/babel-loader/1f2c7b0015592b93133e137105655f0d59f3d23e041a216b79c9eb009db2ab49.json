{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\91997\\\\Downloads\\\\devboard-job-portal (3)\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Login from \"./screens/Login\";\nimport Register from \"./screens/Register\";\nimport JobList from \"./screens/JobList\";\nimport JobPost from \"./screens/JobPost\";\nimport Dashboard from \"./screens/Dashboard\";\nimport Applications from \"./screens/Applications\";\nimport JobDetail from \"./screens/JobDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentScreen, setCurrentScreen] = useState(\"login\");\n  const [user, setUser] = useState(null);\n  const [selectedJob, setSelectedJob] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for stored auth token\n    const token = localStorage.getItem(\"auth-token\");\n    const userData = localStorage.getItem(\"user-data\");\n    if (token && userData) {\n      try {\n        const parsedUser = JSON.parse(userData);\n        // ✅ IMPROVED: Validate user object structure\n        if (parsedUser && parsedUser.id && parsedUser.role) {\n          setUser(parsedUser);\n          setCurrentScreen(parsedUser.role === \"admin\" ? \"dashboard\" : \"jobs\");\n        } else {\n          // Invalid user data structure\n          localStorage.removeItem(\"auth-token\");\n          localStorage.removeItem(\"user-data\");\n        }\n      } catch (error) {\n        // JSON parsing failed\n        localStorage.removeItem(\"auth-token\");\n        localStorage.removeItem(\"user-data\");\n      }\n    }\n    setLoading(false);\n  }, []);\n  const handleLogin = (userData, token) => {\n    // ✅ IMPROVED: Validate input parameters\n    if (!userData || !token) {\n      console.error(\"Invalid login data provided\");\n      return;\n    }\n    setUser(userData);\n    localStorage.setItem(\"auth-token\", token);\n    localStorage.setItem(\"user-data\", JSON.stringify(userData));\n    setCurrentScreen(userData.role === \"admin\" ? \"dashboard\" : \"jobs\");\n  };\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.removeItem(\"auth-token\");\n    localStorage.removeItem(\"user-data\");\n    setCurrentScreen(\"login\");\n  };\n  const navigateTo = (screen, data = null) => {\n    // ✅ IMPROVED: Validate screen parameter\n    const validScreens = [\"login\", \"register\", \"jobs\", \"job-detail\", \"dashboard\", \"post-job\", \"applications\"];\n    if (!validScreens.includes(screen)) {\n      console.error(`Invalid screen: ${screen}`);\n      return;\n    }\n    setCurrentScreen(screen);\n    if (data) {\n      setSelectedJob(data);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n  const renderScreen = () => {\n    switch (currentScreen) {\n      case \"login\":\n        return /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin,\n          onNavigate: navigateTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 16\n        }, this);\n      case \"register\":\n        return /*#__PURE__*/_jsxDEV(Register, {\n          onRegister: handleLogin,\n          onNavigate: navigateTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 16\n        }, this);\n      case \"jobs\":\n        return /*#__PURE__*/_jsxDEV(JobList, {\n          user: user,\n          onLogout: handleLogout,\n          onNavigate: navigateTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 16\n        }, this);\n      case \"job-detail\":\n        return /*#__PURE__*/_jsxDEV(JobDetail, {\n          job: selectedJob,\n          user: user,\n          onNavigate: navigateTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 16\n        }, this);\n      case \"dashboard\":\n        return /*#__PURE__*/_jsxDEV(Dashboard, {\n          user: user,\n          onLogout: handleLogout,\n          onNavigate: navigateTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 16\n        }, this);\n      case \"post-job\":\n        return /*#__PURE__*/_jsxDEV(JobPost, {\n          user: user,\n          onNavigate: navigateTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 16\n        }, this);\n      case \"applications\":\n        return /*#__PURE__*/_jsxDEV(Applications, {\n          user: user,\n          onNavigate: navigateTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 16\n        }, this);\n      default:\n        // ✅ IMPROVED: Handle invalid screen states\n        console.error(`Unknown screen: ${currentScreen}`);\n        return /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin,\n          onNavigate: navigateTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: renderScreen()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"yXTfAIxKO20GWOIe4Ba7pm1meOc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","Login","Register","JobList","JobPost","Dashboard","Applications","JobDetail","jsxDEV","_jsxDEV","App","currentScreen","setCurrentScreen","user","setUser","selectedJob","setSelectedJob","loading","setLoading","token","localStorage","getItem","userData","parsedUser","JSON","parse","id","role","removeItem","error","handleLogin","console","setItem","stringify","handleLogout","navigateTo","screen","data","validScreens","includes","className","children","fileName","lineNumber","columnNumber","renderScreen","onLogin","onNavigate","onRegister","onLogout","job","_c","$RefreshReg$"],"sources":["C:/Users/91997/Downloads/devboard-job-portal (3)/frontend/src/App.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport Login from \"./screens/Login\"\nimport Register from \"./screens/Register\"\nimport JobList from \"./screens/JobList\"\nimport JobPost from \"./screens/JobPost\"\nimport Dashboard from \"./screens/Dashboard\"\nimport Applications from \"./screens/Applications\"\nimport JobDetail from \"./screens/JobDetail\"\n\nfunction App() {\n  const [currentScreen, setCurrentScreen] = useState(\"login\")\n  const [user, setUser] = useState(null)\n  const [selectedJob, setSelectedJob] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    // Check for stored auth token\n    const token = localStorage.getItem(\"auth-token\")\n    const userData = localStorage.getItem(\"user-data\")\n\n    if (token && userData) {\n      try {\n        const parsedUser = JSON.parse(userData)\n        // ✅ IMPROVED: Validate user object structure\n        if (parsedUser && parsedUser.id && parsedUser.role) {\n          setUser(parsedUser)\n          setCurrentScreen(parsedUser.role === \"admin\" ? \"dashboard\" : \"jobs\")\n        } else {\n          // Invalid user data structure\n          localStorage.removeItem(\"auth-token\")\n          localStorage.removeItem(\"user-data\")\n        }\n      } catch (error) {\n        // JSON parsing failed\n        localStorage.removeItem(\"auth-token\")\n        localStorage.removeItem(\"user-data\")\n      }\n    }\n    setLoading(false)\n  }, [])\n\n  const handleLogin = (userData, token) => {\n    // ✅ IMPROVED: Validate input parameters\n    if (!userData || !token) {\n      console.error(\"Invalid login data provided\")\n      return\n    }\n\n    setUser(userData)\n    localStorage.setItem(\"auth-token\", token)\n    localStorage.setItem(\"user-data\", JSON.stringify(userData))\n    setCurrentScreen(userData.role === \"admin\" ? \"dashboard\" : \"jobs\")\n  }\n\n  const handleLogout = () => {\n    setUser(null)\n    localStorage.removeItem(\"auth-token\")\n    localStorage.removeItem(\"user-data\")\n    setCurrentScreen(\"login\")\n  }\n\n  const navigateTo = (screen, data = null) => {\n    // ✅ IMPROVED: Validate screen parameter\n    const validScreens = [\"login\", \"register\", \"jobs\", \"job-detail\", \"dashboard\", \"post-job\", \"applications\"]\n    if (!validScreens.includes(screen)) {\n      console.error(`Invalid screen: ${screen}`)\n      return\n    }\n\n    setCurrentScreen(screen)\n    if (data) {\n      setSelectedJob(data)\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n      </div>\n    )\n  }\n\n  const renderScreen = () => {\n    switch (currentScreen) {\n      case \"login\":\n        return <Login onLogin={handleLogin} onNavigate={navigateTo} />\n      case \"register\":\n        return <Register onRegister={handleLogin} onNavigate={navigateTo} />\n      case \"jobs\":\n        return <JobList user={user} onLogout={handleLogout} onNavigate={navigateTo} />\n      case \"job-detail\":\n        return <JobDetail job={selectedJob} user={user} onNavigate={navigateTo} />\n      case \"dashboard\":\n        return <Dashboard user={user} onLogout={handleLogout} onNavigate={navigateTo} />\n      case \"post-job\":\n        return <JobPost user={user} onNavigate={navigateTo} />\n      case \"applications\":\n        return <Applications user={user} onNavigate={navigateTo} />\n      default:\n        // ✅ IMPROVED: Handle invalid screen states\n        console.error(`Unknown screen: ${currentScreen}`)\n        return <Login onLogin={handleLogin} onNavigate={navigateTo} />\n    }\n  }\n\n  return <div className=\"App\">{renderScreen()}</div>\n}\n\nexport default App\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}